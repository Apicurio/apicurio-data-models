{
  "asyncapi": "2.0.0",
  "id": "urn:io.asyncapi.example.user-signedup",
  "defaultContentType": "application/json",
  "info": {
    "title": "rename-schema-definition",
    "version": "0.1.0",
    "description": "test",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": {
    "development": {
      "url": "broker.kafka.org:443",
      "protocol": "kafka"
    }
  },
  "channels": {
    "user/signedup": {
      "description": "The channel on which user signed up events may be consumed",
      "subscribe": {
        "operationId": "receivedUserSIgnedUp",
        "summary": "Receive informations about user signed up",
        "message": {
          "description": "An event describing that a user just signed up.",
          "payload": {
            "$ref": "#/components/schemas/Person"
          },
          "traits": [
            {
              "$ref": "#/components/messageTraits/commonHeaders"
            }
          ]
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Person": {
        "title": "Person",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Address": {
        "title": "Root Type for Address",
        "type": "object",
        "properties": {
          "field1": {
            "type": "string"
          },
          "field2": {
            "format": "int32",
            "type": "integer"
          }
        },
        "example": {
          "field1": "value1",
          "field2": 2
        }
      },
      "Group": {
        "title": "Root Type for Group",
        "description": "",
        "type": "object",
        "properties": {
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          }
        },
        "example": {
          "persons": []
        }
      }
    },
    "messageTraits": {
      "commonHeaders": {
        "headers": {
          "type": "object",
          "properties": {
            "my-app-header": {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            }
          }
        }
      }
    }
  }
}