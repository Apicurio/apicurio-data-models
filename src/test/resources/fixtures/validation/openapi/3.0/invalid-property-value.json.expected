[ENC-001] |medium| {/paths[/enc-001]/post/requestBody/content[application/x-www-form-urlencoded]/encoding[profileImage]->headers} :: Headers are not allowed for "application/x-www-form-urlencoded" media types.
[ENC-002] |medium| {/paths[/enc-002]/post/requestBody/content[multipart/form-data]/encoding[historyMetadata]->style} :: Encoding Style is not allowed for "multipart/form-data" media types.
[ENC-003] |medium| {/paths[/enc-003]/post/requestBody/content[multipart/form-data]/encoding[historyMetadata]->explode} :: "Explode" is not allowed for "multipart/form-data" media types.
[ENC-004] |medium| {/paths[/enc-004]/post/requestBody/content[multipart/form-data]/encoding[historyMetadata]->allowReserved} :: "Allow Reserved" is not allowed for "multipart/form-data" media types.
[ENC-005] |medium| {/paths[/enc-005]/post/requestBody/content[application/x-www-form-urlencoded]/encoding[historyMetadata]->style} :: Encoding Style is an invalid value.
[HEAD-010] |medium| {/paths[/head-010]/post/requestBody/content[multipart/form-data]/encoding[historyMetadata]/headers[X-Header-1]->style} :: Header Style must be "simple".
[HEAD-011] |medium| {/paths[/head-011]/post/requestBody/content[multipart/form-data]/encoding[historyMetadata]/headers[X-Header-1]->content} :: Header content cannot have multiple media types.
[LINK-002] |medium| {/paths[/link-002]/get/responses[200]/links[address]->operationId} :: The Operation ID does not refer to an existing Operation.
[MT-003] |medium| {/paths[/mt-003]/post/requestBody/content[application/json]->encoding} :: Encoding is not allowed for "application/json" media types.
[OP-009] |medium| {/paths[/op-009]/get->requestBody} :: Request Body is not supported for GET operations.
[OP-013] |medium| {/paths[/op-013]/get->null} :: Operation must have at least one Response.
[PAR-022] |medium| {/paths[/par-022]/parameters[0]->style} :: Parameter Style must be one of: ["matrix", "label", "form", "simple", "spaceDelimited", "pipeDelimited", "deepObject"] (Found "shallowObject").
[PAR-023] |medium| {/paths[/par-022]/parameters[0]->style} :: Query Parameter Style must be one of: ["form", "spaceDelimited", "pipeDelimited", "deepObject"] (Found "shallowObject").
[PAR-003] |medium| {/paths[/par-003/{id}]/parameters[0]->required} :: Path Parameter "id" must be marked as required.
[PAR-013] |medium| {/paths[/par-013/{id}]/parameters[0]->allowEmptyValue} :: Allow Empty Value is not allowed (only for Query params).
[PAR-027] |medium| {/paths[/par-027/{id}]/parameters[0]->style} :: Path Parameter Style must be one of: ["matrix", "label", "simple"]  (Found "form").
[PAR-023] |medium| {/paths[/par-023]/parameters[0]->style} :: Query Parameter Style must be one of: ["form", "spaceDelimited", "pipeDelimited", "deepObject"] (Found "label").
[PAR-024] |medium| {/paths[/par-024]/parameters[0]->style} :: Cookie Parameter style must be "form". (Found "label")
[PAR-025] |medium| {/paths[/par-025]/parameters[0]->style} :: Header Parameter Style must be "simple". (Found "label").
[PAR-028] |medium| {/paths[/par-028]/parameters[0]->allowReserved} :: Allow Reserved is only allowed for Query Parameters.
[PAR-029] |medium| {/paths[/par-029]/parameters[0]->content} :: Parameter content cannot have multiple media types.
[PAR-019] |medium| {/paths[/dupesWithinPathItemInlined]/parameters[0]->in} :: Duplicate query parameter named 'status' found (parameters must be unique by name and location).
[PAR-019] |medium| {/paths[/dupesWithinPathItemInlined]/parameters[1]->in} :: Duplicate query parameter named 'status' found (parameters must be unique by name and location).
[PAR-019] |medium| {/paths[/dupesWithinPathItemInlineAndRefCombo]/parameters[0]->in} :: Duplicate query parameter named 'status' found (parameters must be unique by name and location).
[PAR-019] |medium| {/paths[/dupesWithinPathItemInlineAndRefCombo]/parameters[1]->in} :: Duplicate query parameter named 'status' found (parameters must be unique by name and location).
[PAR-019] |medium| {/paths[/dupesWithinPathItemIndirectReference]/parameters[0]->in} :: Duplicate query parameter named 'status' found (parameters must be unique by name and location).
[PAR-019] |medium| {/paths[/dupesWithinPathItemIndirectReference]/parameters[1]->in} :: Duplicate query parameter named 'status' found (parameters must be unique by name and location).
[PAR-018] |medium| {/paths[/incorrectReferenceWithinPathItem]/parameters[1]->$ref} :: Parameter Reference must refer to a valid Parameter Definition.
[PAR-019] |medium| {/paths[/dupesWithinOpInlined]/get/parameters[0]->in} :: Duplicate query parameter named 'status' found (parameters must be unique by name and location).
[PAR-019] |medium| {/paths[/dupesWithinOpInlined]/get/parameters[1]->in} :: Duplicate query parameter named 'status' found (parameters must be unique by name and location).
[PAR-019] |medium| {/paths[/dupesWithinOpInlineAndRefCombo]/get/parameters[0]->in} :: Duplicate query parameter named 'status' found (parameters must be unique by name and location).
[PAR-019] |medium| {/paths[/dupesWithinOpInlineAndRefCombo]/get/parameters[1]->in} :: Duplicate query parameter named 'status' found (parameters must be unique by name and location).
[PAR-007] |medium| {/paths[/par-007/operation/{id}]/get/parameters[1]->name} :: Path Parameter "missing" not found in path template.
[PAR-007] |medium| {/paths[/par-007/pathItem/{id}]/parameters[0]->name} :: Path Parameter "missing" not found in path template.
[OP-011] |medium| {/paths[/op-011/{id}/{sub}]/get->null} :: No definition found for path variable "sub" for path '/op-011/{id}/{sub}' and method 'GET'.
[PAR-021] |medium| {/paths[/par-021]/parameters[0]->name} :: The "Content-Type" header parameter will be ignored.
[SCH-002] |medium| {/paths[/sch-002]/get/responses[200]/content[application/json]/schema/discriminator->discriminator} :: Schema Discriminator is only allowed when using one of: ["oneOf", "anyOf", "allOf"]
[SREQ-002] |medium| {/paths[/sreq-002]/get/security[0]->null} :: Security Requirement 'api_key' scopes must be an empty array because the referenced Security Definition not "oauth2" or "openIdConnect".
[SVAR-003] |medium| {/servers[0]/variables[missingProperty]->null} :: Server Variable "missingProperty" is not found in the server url template.
[XML-002] |medium| {/components/schemas[xml-002]/properties[name]/xml->wrapped} :: XML Wrapped elements can only be used for "array" properties.
[SS-008] |medium| {/components/securitySchemes[ss-008]->type} :: Security Scheme Type must be one of: apiKey, http, oauth2, openIdConnect
[SS-009] |medium| {/components/securitySchemes[ss-009]->in} :: API Key Security Scheme must be located "in" one of: query, header, cookie
[SS-017] |medium| {/components/securitySchemes[ss-017]->bearerFormat} :: Security Scheme "Bearer Format" only allowed for HTTP Bearer auth scheme.
[SS-016] |medium| {/components/securitySchemes[ss-016]->scheme} :: HTTP Security Scheme must be one of: ["basic", "bearer", "digest", "hoba", "mutual", "negotiate", "oauth", "vapid", "scram-sha-1", "scram-sha-256"] (Found: 'leveraged')