{
	"http://www.example.com/schemas/foo.json#/components/schemas/Person": {
		"type": "object",
		"properties": {
			"name": {
				"type": "string"
			},
			"age": {
				"format": "int32",
				"type": "integer"
			},
			"address": {
				"type": "string"
			}
		},
		"example": {
			"name": "John",
			"age": 48,
			"address": "12345 Main St"
		}
	},
	"http://www.example.com/other-schemas/schemas.json#/components/schemas/Person": {
		"type": "object",
		"properties": {
			"name": {
				"type": "string"
			},
			"age": {
				"format": "int32",
				"type": "integer"
			}
		}
	},
	"http://www.example.com/schemas/foo.json#/components/schemas/Address": {
		"type": "object",
		"properties": {
			"street": {
				"type": "string"
			},
			"city": {
				"type": "string"
			},
			"state": {
				"type": "string"
			},
			"zip": {
				"type": "string"
			}
		}
	},
	"http://www.example.com/schemas/foo.json#/components/schemas/PersonWithAddress": {
		"type": "object",
		"properties": {
			"name": {
				"type": "string"
			},
			"age": {
				"format": "int32",
				"type": "integer"
			},
			"address": {
				"$ref": "http://www.example.com/schemas/foo.json#/components/schemas/Address"
			}
		},
		"example": {
			"name": "John",
			"age": 48,
			"address": "12345 Main St"
		}
	},
	"http://www.example.com/schemas/foo.json#/components/schemas/PersonWithAddressAndSpouse": {
		"type": "object",
		"properties": {
			"name": {
				"type": "string"
			},
			"age": {
				"format": "int32",
				"type": "integer"
			},
			"address": {
				"$ref": "http://www.example.com/schemas/foo.json#/components/schemas/Address"
			},
			"spouse": {
				"$ref": "http://www.example.com/schemas/foo.json#/components/schemas/Person"
			}
		},
		"example": {
			"name": "John",
			"age": 48,
			"address": "12345 Main St"
		}
	},
	"http://www.example.com/schemas/foo.json#/components/schemas/PersonWithRelativeAddressAndSpouse": {
		"type": "object",
		"properties": {
			"name": {
				"type": "string"
			},
			"age": {
				"format": "int32",
				"type": "integer"
			},
			"address": {
				"$ref": "#/components/schemas/Address"
			},
			"spouse": {
				"$ref": "#/components/schemas/Person"
			}
		},
		"example": {
			"name": "John",
			"age": 48,
			"address": "12345 Main St"
		}
	},
	"https://www.example.com/schemas.json#/components/schemas/Item": {
		"type": "object",
		"properties": {
			"name": {
				"type": "string"
			},
			"description": {
				"format": "string"
			},
			"widget": {
				"$ref": "#/components/schemas/Widget"
			}
		}
	},
	"https://www.example.com/schemas.json#/components/schemas/Widget": {
		"type": "object",
		"properties": {
			"name": {
				"type": "string"
			}
		}
	},
	"https://www.example.com/schemas.json#/components/schemas/SelfWidget": {
		"type": "object",
		"properties": {
			"name": {
				"type": "string"
			},
			"widget": {
				"$ref": "#/components/schemas/SelfWidget"
			}
		}
	},
	"https://schemas.example.org/responses.json#/components/responses/NotFound": {
		"content": {
			"application/json": {
				"schema": {
					"$ref": "#/components/schemas/Error"
				}
			}
		},
		"description": ""
	},
	"https://apis.example.com/common.js#/components/schemas/Widget": {
		"type": "object",
		"properties": {
			"name": {
				"type": "string"
			}
		}
	},
	"https://apis.example.com/common.js#/components/responses/PetResponse": {
		"description": "a pet to be returned",
		"content": {
			"application/json": {
				"schema": {
					"type": "string"
				}
			}
		}
	},
	"https://apis.example.com/common.js#/components/parameters/Param": {
		"name": "username",
		"in": "path",
		"description": "username to fetch",
		"required": true,
		"schema": {
			"type": "string"
		}
	},
	"https://apis.example.com/common.js#/components/examples/Example": {
		"summary": "Example 1 Summary",
		"description": "Example 1 description.",
		"value": "Example1Value"
	},
	"https://apis.example.com/common.js#/components/requestBodies/MyRequestBody": {
		"description": "The request body.",
		"content": {
			"application/json": {
				"schema": {
					"$ref": "#/components/schemas/Widget"
				}
			}
		},
		"required": true
	},
	"https://apis.example.com/common.js#/components/headers/Header": {
		"description": "The number of allowed requests in the current period",
		"schema": {
			"type": "integer"
		}
	},
	"https://apis.example.com/common.js#/components/securitySchemes/BASIC": {
		"type": "http",
		"scheme": "basic"
	},
	"https://apis.example.com/common.js#/components/links/SomeLink": {
		"operationRef": "#paths~12.0~1repositories~1{$response.body#/username}",
		"operationId": "getRepositoriesByOwner",
		"parameters": {
			"username": "$response.body#/username"
		},
		"description": "The link1 description.",
		"server": {
			"url": "https://development.gigantic-server.com/v1",
			"description": "Development server"
		}
	},
	"https://apis.example.com/common.js#/components/callbacks/TheCallback": {
		"$request.header#/put-url": {
			"put": {
				"requestBody": {
					"description": "Callback payload",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Widget"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "webhook successfully processed and no retries will be performed"
					}
				}
			}
		}
	},
	"https://apis20.example.com/components.js#/definitions/Widget20": {
		"title": "Example Schema",
		"type": "object",
		"minProperties": 2,
		"maxProperties": 3,
		"readOnly": false,
		"properties": {
			"firstName": {
				"type": "string"
			},
			"lastName": {
				"type": "string",
				"minLength": 1,
				"maxLength": 128
			},
			"age": {
				"description": "Age in years",
				"type": "integer",
				"minimum": 0
			}
		},
		"required": [
			"firstName",
			"lastName"
		]
	},
	"https://apis20.example.com/components.js#/parameters/skipParam": {
		"name": "skip",
		"in": "query",
		"description": "number of items to skip",
		"required": true,
		"type": "integer",
		"format": "int32"
	},
	"https://apis20.example.com/components.js#/responses/GeneralError": {
		"description": "General Error",
		"schema": {
			"type": "string"
		}
	},
	"https://asyncapi.example.com/common#/components/messages/lightMeasured": {
		"name": "lightMeasured",
		"title": "Light measured",
		"summary": "Inform about environmental lighting conditions of a particular streetlight.",
		"contentType": "application/json",
		"traits": [
			{
				"$ref": "#/components/messageTraits/commonHeaders"
			}
		],
		"payload": {
			"$ref": "#/components/schemas/lightMeasuredPayload"
		}
	},
	"https://asyncapi.example.com/common#/components/schemas/lightMeasuredPayload": {
		"type": "object",
		"properties": {
			"id": {
				"type": "integer",
				"minimum": 0,
				"description": "Id of the streetlight."
			},
			"lumens": {
				"type": "integer",
				"minimum": 0,
				"description": "Light intensity measured in lumens."
			},
			"sentAt": {
				"type": "string",
				"format": "date-time",
				"description": "Date and time when the message was sent."
			}
		}
	},
	"https://asyncapi.example.com/common#/components/securitySchemes/token": {
		"type": "http",
		"scheme": "bearer"
	},
	"https://asyncapi.example.com/common#/components/parameters/streetlightId": {
		"description": "The ID of the streetlight.",
		"schema": {
			"type": "string"
		}
	},
	"https://asyncapi.example.com/common#/components/correlationIds/sentAtCorrelator": {
		"description": "Data from message payload used as correlation ID",
		"location": "$message.payload#/sentAt"
	},
	"https://asyncapi.example.com/common#/components/operationTraits/kafka": {
		"bindings": {
			"kafka": {
				"clientId": "my-app-id"
			}
		}
	},
	"https://asyncapi.example.com/common#/components/messageTraits/commonHeaders": {
		"headers": {
			"type": "object",
			"properties": {
				"my-app-header": {
					"type": "integer",
					"minimum": 0,
					"maximum": 100
				}
			}
		}
	},
	"https://asyncapi.example.com/common#/components/messageBindings/streamingHeaders": {
		"http": {
			"headers": {
				"Transfer-Encoding": "chunked",
				"Trailer": "\\r\\n"
			}
		}
	},
    "apicurio:39013#/components/schemas/Alert": {
        "type": "object",
        "properties": {
            "foo": {
                "type": "string"
            },
            "bar": {
                "type": "string",
                "minLength": 1,
                "maxLength": 128
            }
        },
        "required": [
            "foo",
            "bar"
        ]
    },
    "apicurio:39013#/components/schemas/CalendarEvent": {
        "type": "object",
        "properties": {
            "flerg": {
                "type": "string"
            }
        }
    },
	"apicurio:41205#/components/schemas/CalendarEvent": {
		"type": "object",
		"allOf": [
			{
				"$ref": "#/components/schemas/JSEvent"
			}
		]
	},
	"apicurio:41205#/components/schemas/JSCalendar": {
		"type": "object"
	},
	"apicurio:41205#/components/schemas/JSEvent": {
		"type": "object",
		"allOf": [
			{
				"$ref": "#/components/schemas/JSCalendar"
			}
		]
	},
	"https://schemas.example.org/responses.json#/paths/~1invoices": {
		"description": "Operations on invoices",
		"get": {
			"responses": {
				"200": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Invoice"
								}
							}
						}
					},
					"description": "OK"
				},
				"404": {
					"$ref": "https://schemas.example.org/responses.json#/components/responses/NotFound"
				}
			},
			"operationId": "getInvoices"
		},
		"post": {
			"responses": {
				"201": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Invoice"
							}
						}
					},
					"description": "CREATED"
				}
			},
			"operationId": "AddInvoice"
		}
	},
	"https://schemas.example.org/responses.json#/components/schemas/Invoice": {
		"type": "object",
		"properties": {
			"id": {
				"type": "number"
			},
			"name": {
				"type": "string"
			}
		}
	},
	"https://schemas.example.org/responses.json#/components/schemas/Error": {
		"description": "",
		"required": [
			"code"
		],
		"type": "object",
		"properties": {
			"code": {
				"description": "",
				"type": "string"
			}
		}
	},
	"https://apis20.example.com/components.js#/paths/~1pets": {
		"get": {
			"summary": "List Pets",
			"description": "Returns all pets from the system that the user has access to",
			"operationId": "listPets",
			"parameters": [
				{
					"name": "token",
					"in": "header",
					"description": "token to be passed as a header",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "csv"
				},
				{
					"name": "user",
					"in": "body",
					"description": "user to add to the system",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Widget20"
					},
					"allowEmptyValue": false
				},
				{
					"$ref": "#/parameters/skipParam"
				}
			],
			"responses": {
				"200": {
					"description": "A simple string response",
					"schema": {
						"$ref": "#/definitions/Widget20"
					}
				},
				"500": {
					"$ref": "#/responses/GeneralError"
				}
			}
		},
		"post": {
			"summary": "Add stuff",
			"operationId": "AddStuff",
			"parameters": [
				{
					"name": "stuff",
					"in": "body",
					"description": "pet to add to the system",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"id": {
								"type": "number"
							}
						}
					}
				}
			],
			"responses": {
				"200": {
					"description": "A response"
				}
			}
		}
	}
}
