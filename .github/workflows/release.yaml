name: Release Workflow
on:
  pull_request:
    branches: [master]
    types: [closed]
    paths:
      - '.github/project.yaml'

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.repository_owner == 'Apicurio'
    steps:
      - name: Retrieve Project Metadata
        uses: radcortez/project-metadata-action@master
        id: metadata
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          metadata-file-path: '.github/project.yaml'
      - name: Set up Node.js v12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up settings.xml
        run: |
          echo "<settings><servers><server><id>${{ secrets.OSSRH_ID }}</id><username>${{ secrets.OSSRH_USERNAME }}</username><password>${{ secrets.OSSRH_TOKEN }}</password></server></servers><profiles><profile><id>${{ secrets.OSSRH_ID }}</id><activation><activeByDefault>true</activeByDefault></activation><properties><gpg.executable>gpg</gpg.executable><gpg.passphrase>${{ secrets.GPG_PASSPHRASE}}</gpg.passphrase></properties></profile></profiles></settings>" > /home/runner/.m2/settings.xml
          cat /home/runner/.m2/settings.xml
      - name: Set up Gren
        run: npm install github-release-notes -g
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository                               
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Apicurio Data Models Code Checkout
        run: |
          git init
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"
          git remote add origin "https://apicurio-ci:${{ secrets.ACCESS_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
          git fetch
          git checkout master
          git branch --set-upstream-to=origin/master
          git pull
          echo "#### Listing files after clone ####"
          find .
      - name: Apicurio Website Code Checkout
        run: |
          mkdir website
          cd website
          git init
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"
          git remote add origin "https://apicurio-ci:${{ secrets.ACCESS_TOKEN }}@github.com/Apicurio/apicurio.github.io.git"
          git fetch
          git checkout master
          git branch --set-upstream-to=origin/master
          git pull
      - name: Update Release Version ${{steps.metadata.outputs.release-version}}
        run: mvn versions:set -DnewVersion=${{steps.metadata.outputs.release-version}} -DgenerateBackupPoms=false -DprocessAllModules=true
      - name: Verify Build
        run: mvn clean install -Ptranspilation
      - name: Commit Release Version Change
        run: |
          git add .
          git commit -m "Automated version update: ${{steps.metadata.outputs.release-version}}"
          git push
      - name: Remove prefix '.Final' from package.json
        run: |
          pushd .
          cd target/ts
          sed -i "s/.Final//g" ./dist/package.json
          popd
      - name: Create '.npmrc' File 
        uses: filipstefansson/set-npm-token-action@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
      - name: Create GitHub Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{steps.metadata.outputs.release-version}}       
          release_name: ${{steps.metadata.outputs.release-version}}
      - name: Generate Release Notes
        run: gren release --token=${{ secrets.GITHUB_TOKEN }} --override --prefix=v             
      - name: Publish to Maven Central
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.OSSRH_USERNAME }}
          nexus_password: ${{ secrets.OSSRH_TOKEN }}
          maven_goals_phases: deploy --batch-mode --settings /home/runner/.m2/settings.xml -DskipTests
          maven_profiles: release   
      - name: Publish to NPM
        run: npm publish ./target/ts/dist/
      - name: Update Snapshot version ${{steps.metadata.outputs.snapshot-version}}
        run: mvn versions:set -DnewVersion=${{steps.metadata.outputs.snapshot-version}} -DgenerateBackupPoms=false -DprocessAllModules=true
      - name: Commit Snapshot Version Change
        run: |
          git add .
          git restore --staged .npmrc    # can't commit, contains NPM token
          git commit -m"Automated version update: ${{steps.metadata.outputs.snapshot-version}}"
          git push
      - name: Updating Project Website for Release ${{steps.metadata.outputs.release-version}}
        run: |
          cd website
          echo "********** Downloading Latest Release JSON File **********"
          cd _data/datamodels
          rm latestRelease.json
          touch latestRelease.json && curl https://api.github.com/repos/apicurio/apicurio-data-models/releases/latest > latestRelease.json
          
          echo "********** Copying Latest Release JSON File **********"
          PUBLISHED_AT=$(cat responsefile | jq '.published_at' | sed 's/"//g')
          cp latestRelease.json releases/$PUBLISHED_AT.json
          
          # setting up env variable to use in next step to force commit the file
          echo "::set-env name=FILENAME::$PUBLISHED_AT" 
      - name: Commit Project Website Changes
        run: |
          cd website
          git add .
          git add -f _data/datamodels/releases/$FILENAME.json    #ignored due to .gitignore config
          git commit -m "Automated Update For Apicurio Data Models Release Version: ${{steps.metadata.outputs.release-version}}"
          git push
